Source URL: https://faustdoc.grame.fr/
Site: faustdoc.grame.fr
Documentation Type: Manual
================================================================================

Home
Manual
Introduction
Overview of the Faust Universe
Quick Start
Faust Syntax
Error Messages
Using the Compiler
Compiler Options
faust2[...] Tools
Architecture Files
Embedding the Compiler
Optimizing the Code
Debugging the Code
Deploying on the Web
Remote Compilation
Mathematical Documentation
OSC Support
HTTP Support
MIDI Support
Soundfiles Support
Community
Frequently Asked Questions
Examples
ambisonics
analysis
bela
delayEcho
dynamic
filtering
gameaudio
generator
misc
phasing
physicalModeling
pitchShifting
psychoacoustic
reverb
smartKeyboard
spat
Download examples
Tutorials
Faust & JUCE
DSP on the Teensy With Faust
DSP on the ESP-32 With Faust
Making a Sine Oscillator From Scratch
RMS and Summation in Faust
Using the box API
Using the signal API
Using Faust in Julia
Using Faust in Cmajor
Using Faust in JSFX
Using Faust in RNBO with codebox~
Advanced debugging with interp-tracer
Workshops
2018-12-01 PAW
2020-03-24 CITI
2020-04-10 Faust 101
2020-04-10 Faust & JUCE
2020-11-21 Faust & VCV Rack
About
Search
Faust Language Documentation
What is Faust?
Getting Started
If You're In a Hurry
If You Wanna Get Started With Faust
If You’re Looking For the "Manual"
If You’re Looking For the Documentation of a Function In the Faust Libraries
If You Prefer Video Tutorials
If You're Looking For Something in Particular
Other Resources to learn Faust
Faust Language Documentation
This website centralizes all the documentation of the
Faust programming language
. It contains tutorials, the Faust manual, various examples, etc. It is meant to be used in tandem with the
Faust Web IDE
.
The main Faust website can be found at the following URL:
https://faust.grame.fr
What is Faust?
Faust
(Functional Audio Stream) is a functional programming language for sound synthesis and audio processing with a strong focus on the design of synthesizers, musical instruments, audio effects, etc. Faust targets high-performance signal processing applications and audio plug-ins for a variety of platforms and standards. It is used on stage for concerts and artistic productions, in education and research, in open source projects as well as in commercial applications.
The core component of Faust is its compiler. It allows us to "translate" any Faust digital signal processing (DSP) specification to a wide range of non-domain specific languages such as C++, C, JAVA, LLVM IR, WebAssembly, etc. In this regard, Faust can be seen as an alternative to C++ but is much simpler and intuitive to learn.
Thanks to a wrapping system called "architectures," codes generated by Faust can be easily compiled into a wide variety of objects ranging from audio plug-ins to standalone applications or smartphone and web apps, etc.
Getting Started
If You're In a Hurry
If you’re in a hurry and just wanna have a look at how Faust programs look like, you can simply check the
Faust Examples
.
If You Wanna Get Started With Faust
If you’re looking for a step by step tutorial of approximately 2 hours that will walk you through writing simple Faust programs and give you an overview of what Faust can do, have a look at our
Quick Start Tutorial
.
If You’re Looking For the "Manual"
Faust’s syntax and features are thoroughly documented in the
Faust Manual
. This resource contains hundreds of code examples and many short tutorials.
If You’re Looking For the Documentation of a Function In the Faust Libraries
The
documentation of Faust's standard libraries
is automatically generated directly from the libraries' source code.
If You Prefer Video Tutorials
Check out
the Faust Kadenze course
.
If You're Looking For Something in Particular
You can use the
Search
function of this website if you're looking for something specific.
Other Resources to learn Faust
Search
×
Close
From here you can search these documents. Enter your search terms below.
Keyboard Shortcuts
×
Close
Keys
Action
?
Open this help
n
Next page
p
Previous page
s
Search